from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters
import logging

# إعدادات تسجيل الأخطاء
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# دالة بدء البوت
async def start(update: Update, context):
    user = update.effective_user
    user_data = """🎉 مرحبًا بك في بوت عبد الجبار الظاهري! 🎉
🤖 هذا البوت يحتوي على العديد من الأقسام المخصصة لدفعة تقنية المعلومات في جامعة السعيدة.
📚 **ملازم:** هنا سيتم توفير الملازم الدراسية على مدار السنوات الدراسية 🤗.
📝 **ملخصات:** سيتم بقدر المستطاع توفير الملخصات لمساعدتك في المراجعة 📖.
📹 **صور محاضرات:** سيتم مشاركة الصور المهمة للمحاضرات كمرجع في المستقبل إن شاء الله 📸.
💻 **أكواد وبرامج:** سيتم توفير الأكواد والبرامج التي ستساعدنا في مشاريعنا الدراسية 💡.
🌟 أنا هنا لمساعدتك في الحصول على أفضل المحتويات التعليمية التي تحتاجها لدراستك 🚀.
📱 **للتواصل: 773907583**
"""
    # طباعة بيانات المستخدم في السجل
    logging.info(f"User joined: {user.first_name} {user.last_name} | Username: @{user.username} | ID: {user.id}")
    await update.message.reply_text(user_data)
    # إرسال القوائم
    reply_markup = ReplyKeyboardMarkup(
        [
            [KeyboardButton("📚 ملازم"), KeyboardButton("📝 ملخصات")],
            [KeyboardButton("📹 صور محاضرات"), KeyboardButton("💻 أكواد وبرامج")],
        ],
        resize_keyboard=True
    )
    await update.message.reply_text(
        "اختر القسم الذي تود الوصول إليه:",
        reply_markup=reply_markup
    )

# دالة لمعالجة القوائم
async def handle_message(update: Update, context):
    user_message = update.message.text

    # القائمة الرئيسية
    if user_message == "📚 ملازم":
        reply_markup = ReplyKeyboardMarkup(
            [
                [KeyboardButton("📅 سنة أولى"), KeyboardButton("📅 سنة ثانية")],
                [KeyboardButton("📅 سنة ثالثة"), KeyboardButton("📅 سنة رابعة")],
                [KeyboardButton("🔙 العودة إلى القائمة الرئيسية")],
            ],
            resize_keyboard=True
        )
        await update.message.reply_text(
            "اختر السنة التي تود الوصول إليها:",
            reply_markup=reply_markup
        )

    # قوائم السنوات
    elif user_message in ["📅 سنة أولى", "📅 سنة ثانية", "📅 سنة ثالثة", "📅 سنة رابعة"]:
        # تخزين السنة المختارة في context.user_data
        context.user_data['selected_year'] = user_message
        reply_markup = ReplyKeyboardMarkup(
            [
                [KeyboardButton("📆 ترم أول"), KeyboardButton("📆 ترم ثاني")],
                [KeyboardButton("🔙 العودة إلى قسم الملازم")],
            ],
            resize_keyboard=True
        )
        await update.message.reply_text(
            f"🎓 اختر الترم الذي تود الاطلاع على محتوياته لـ {user_message}.",
            reply_markup=reply_markup
        )

    # قوائم الترم
    elif user_message in ["📆 ترم أول", "📆 ترم ثاني"]:
        # تخزين الترم المختار في context.user_data
        context.user_data['selected_term'] = user_message
        reply_markup = ReplyKeyboardMarkup(
            [
                [KeyboardButton("📂 الملف رابط مباشر"), KeyboardButton("📥 الملف جاهز")],
                [KeyboardButton("🔙 العودة إلى السنة")],
            ],
            resize_keyboard=True
        )
        await update.message.reply_text(
            f"📚 اختر نوع الملف الذي تود الاطلاع عليه في {user_message}.",
            reply_markup=reply_markup
        )

    # قوائم الملفات
    elif user_message == "📂 الملف رابط مباشر":
        # استرجاع السنة والترم المختارين من context.user_data
        selected_year = context.user_data.get('selected_year', '')
        selected_term = context.user_data.get('selected_term', '')
        if selected_year == "📅 سنة أولى" and selected_term == "📆 ترم أول":
            reply_markup = ReplyKeyboardMarkup(
                [
                    [KeyboardButton("📚 ملزمة اللغة العربية"), KeyboardButton("🕌 ملزمة الثقافة الإسلامية")],
                    [KeyboardButton("💻 ملزمة برمجة الحاسوب"), KeyboardButton("📘 ملزمة مهارات الحاسوب عملي")],
                    [KeyboardButton("📘 ملزمة مهارات الحاسوب نظري"), KeyboardButton("📝 ملزمة اللغة الإنجليزية")],
                    [KeyboardButton("🔙 العودة إلى الترم")],
                ],
                resize_keyboard=True
            )
            await update.message.reply_text(
                "📂 اختر الملزمة التي تود تنزيلها من الروابط أدناه:",
                reply_markup=reply_markup
            )
        elif selected_year == "📅 سنة أولى" and selected_term == "📆 ترم ثاني":
            reply_markup = ReplyKeyboardMarkup(
                [
                    [KeyboardButton("🧮 التصميم المنطقي"), KeyboardButton("💡 مقدمة في تقنية المعلومات")],
                    [KeyboardButton("📐 رياضيات"), KeyboardButton("📝 اللغة الإنجليزية")],
                    [KeyboardButton("📊 الإحصاء والاحتمالات"), KeyboardButton("💻 برمجة الحاسوب")],
                    [KeyboardButton("📞 مهارات الاتصال"), KeyboardButton("🔙 العودة إلى الترم")],
                ],
                resize_keyboard=True
            )
            await update.message.reply_text(
                "📂 اختر الملزمة التي تود تنزيلها من الروابط أدناه:",
                reply_markup=reply_markup
            )
        else:
            await update.message.reply_text(
                "😊💖 سيتم إضافة البيانات قريبًا. شكرًا لتفهمك!"
            )

    # روابط الملازم
    elif user_message == "📚 ملزمة اللغة العربية":
        await update.message.reply_text(
            "📚 ملزمة اللغة العربية:\n\nرابط التنزيل:\nhttps://drive.google.com/file/d/17W0UegYV3U5awM5LWT6-O3Z22bw6K-Dz/view?usp=drivesdk"
        )
    elif user_message == "🕌 ملزمة الثقافة الإسلامية":
        await update.message.reply_text(
            "🕌 ملزمة الثقافة الإسلامية:\n\nرابط التنزيل:\nhttps://drive.google.com/file/d/17VuZqjcwuRwezzDHiw2aTlvSDnzffynx/view?usp=drivesdk"
        )
    elif user_message == "💻 ملزمة برمجة الحاسوب":
        await update.message.reply_text(
            "💻 ملزمة برمجة الحاسوب:\n\nرابط التنزيل:\nhttps://drive.google.com/file/d/17WeDphPwJ2VefEdsdF115g9jLS8bZU32/view?usp=drivesdk"
        )
    elif user_message == "📘 ملزمة مهارات الحاسوب عملي":
        await update.message.reply_text(
            "📘 ملزمة مهارات الحاسوب عملي:\n\nرابط التنزيل:\nhttps://drive.google.com/file/d/17XyY6Ukxf6OAdm1auDQArNmofqdXIxNE/view?usp=drivesdk"
        )
    elif user_message == "📘 ملزمة مهارات الحاسوب نظري":
        await update.message.reply_text(
            "📘 ملزمة مهارات الحاسوب نظري:\n\nرابط التنزيل:\nhttps://drive.google.com/file/d/17YnGLmsq1-ECIPEoLIp0-IhWMC1oNrGz/view?usp=drivesdk"
        )
    elif user_message == "📝 ملزمة اللغة الإنجليزية":
        await update.message.reply_text(
            "📝 ملزمة اللغة الإنجليزية:\n\nرابط التنزيل:\nhttps://drive.google.com/file/d/17YnGLmsq1-ECIPEoLIp0-IhWMC1oNrGz/view?usp=drivesdk"
        )

    # روابط الملازم لترم ثاني سنة أولى
    elif user_message == "🧮 التصميم المنطقي":
        await update.message.reply_text(
            "🧮 التصميم المنطقي:\n\nرابط التنزيل:\nhttps://drive.google.com/file/d/18qJnAia6XfcijUwzotwE3XcR-OegGK0K/view?usp=drivesdk"
        )
    elif user_message == "💡 مقدمة في تقنية المعلومات":
        await update.message.reply_text(
            "💡 مقدمة في تقنية المعلومات:\n\nرابط التنزيل:\nhttps://example.com/intro-to-it"
        )
    elif user_message == "📐 رياضيات":
        await update.message.reply_text(
            "📐 رياضيات:\n\nرابط التنزيل:\nhttps://example.com/math"
        )
    elif user_message == "📝 اللغة الإنجليزية":
        await update.message.reply_text(
            "📝 اللغة الإنجليزية:\n\nرابط التنزيل:\nhttps://example.com/english"
        )
    elif user_message == "📊 الإحصاء والاحتمالات":
        await update.message.reply_text(
            "📊 الإحصاء والاحتمالات:\n\nرابط التنزيل:\nhttps://example.com/statistics"
        )
    elif user_message == "💻 برمجة الحاسوب":
        await update.message.reply_text(
            "💻 برمجة الحاسوب:\n\nرابط التنزيل:\nhttps://example.com/programming"
        )
    elif user_message == "📞 مهارات الاتصال":
        await update.message.reply_text(
            "📞 مهارات الاتصال:\n\nرابط التنزيل:\nhttps://example.com/communication-skills"
        )

    # العودة بين القوائم
    elif user_message == "🔙 العودة إلى الترم":
        reply_markup = ReplyKeyboardMarkup(
            [
                [KeyboardButton("📂 الملف رابط مباشر"), KeyboardButton("📥 الملف جاهز")],
                [KeyboardButton("🔙 العودة إلى السنة")],
            ],
            resize_keyboard=True
        )
        await update.message.reply_text(
            "📚 اختر نوع الملف الذي تود الاطلاع عليه.",
            reply_markup=reply_markup
        )
    elif user_message == "🔙 العودة إلى السنة":
        reply_markup = ReplyKeyboardMarkup(
            [
                [KeyboardButton("📆 ترم أول"), KeyboardButton("📆 ترم ثاني")],
                [KeyboardButton("🔙 العودة إلى قسم الملازم")],
            ],
            resize_keyboard=True
        )
        await update.message.reply_text(
            "🎓 اختر الترم الذي تود الاطلاع على محتوياته.",
            reply_markup=reply_markup
        )
    elif user_message == "🔙 العودة إلى قسم الملازم":
        reply_markup = ReplyKeyboardMarkup(
            [
                [KeyboardButton("📅 سنة أولى"), KeyboardButton("📅 سنة ثانية")],
                [KeyboardButton("📅 سنة ثالثة"), KeyboardButton("📅 سنة رابعة")],
                [KeyboardButton("🔙 العودة إلى القائمة الرئيسية")],
            ],
            resize_keyboard=True
        )
        await update.message.reply_text(
            "اختر السنة التي تود الوصول إليها:",
            reply_markup=reply_markup
        )
    elif user_message == "🔙 العودة إلى القائمة الرئيسية":
        reply_markup = ReplyKeyboardMarkup(
            [
                [KeyboardButton("📚 ملازم"), KeyboardButton("📝 ملخصات")],
                [KeyboardButton("📹 صور محاضرات"), KeyboardButton("💻 أكواد وبرامج")],
            ],
            resize_keyboard=True
        )
        await update.message.reply_text(
            "اختر القسم الذي تود الوصول إليه:",
            reply_markup=reply_markup
        )
    else:
        await update.message.reply_text("😊💖 سيتم إضافة البيانات قريبًا. شكرًا لتفهمك!")

# تشغيل البوت
def main():
    app = ApplicationBuilder().token("7617142739:AAGu5DdYlVwi5y1b0bniv5tmXY54jIwSkdU").build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    # تشغيل البوت باستخدام Polling
    app.run_polling()

if __name__ == "__main__":
    main()